{"version":3,"sources":["matrix.ts","components/Header.tsx","stories/Box.tsx","stories/Field.tsx","stories/Counter.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["FIELD_SIZE","createMatrix","field","i","undefined","j","Math","floor","searchHead","matrix","xHead","yHead","maxHead","row","column","getRandomInt","min","max","ceil","random","getWormLength","bodyCount","copyArray","array","newArray","length","getNextMatrix","direct","newMatrix","searchFood","console","log","xFood","yFood","createFood","xNextHead","yNextHead","switchDirection","head","minusOne","Header","className","Box","status","Field","map","rowIndex","item","itemIndex","Counter","App","useState","setMatrix","useRef","upArrow","downArrow","leftArrow","rightArrow","useKey","event","includes","key","current","useEffect","intervalId","setInterval","clearInterval","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95e06e92.chunk.js","sourcesContent":["export const FIELD_SIZE = 21;\r\nexport const EMPTY_FIELD = 0;\r\nexport const FOOD_FIELD = -1;\r\n\r\nexport const UP = 0;\r\nexport const DOWN = 1;\r\nexport const LEFT = 2;\r\nexport const RIGHT = 3;\r\n//\r\n// const final = [\r\n//   [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],\r\n//   [0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0],\r\n//   [0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0],\r\n//   [0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0],\r\n//   [0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0],\r\n//   [0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0],\r\n//   [0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0],\r\n//   [0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0],\r\n//   [0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0],\r\n//   [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1]\r\n// ];\r\n\r\nexport type Field = number[][];\r\nexport type PrevHeadCoordinates = {\r\n  maxHead: number;\r\n  xHead: number;\r\n  yHead: number;\r\n};\r\nexport type HeadCoordinates = {\r\n  xNextHead: number;\r\n  yNextHead: number;\r\n};\r\n\r\n// Функция создаёт матрицу\r\nexport function createMatrix(): Field {\r\n  const field: Field = [];\r\n  for (let i = 0; i < FIELD_SIZE; i++) {\r\n    if (field[i] === undefined) {\r\n      field[i] = [];\r\n    }\r\n    for (let j = 0; j < FIELD_SIZE; j++) {\r\n      field[i][j] = EMPTY_FIELD;\r\n      if (i === Math.floor(FIELD_SIZE / 2) && j === Math.floor(FIELD_SIZE / 2)) {\r\n        field[i][j] = 1;\r\n      }\r\n    }\r\n  }\r\n  return field;\r\n}\r\n\r\n// Функция поиска головы\r\nexport function searchHead(matrix: Field): PrevHeadCoordinates {\r\n  // Координаты головы\r\n  let xHead = 0;\r\n  let yHead = 0;\r\n  let maxHead = -1;\r\n  for (let row = 0; row < FIELD_SIZE; row++) {\r\n    for (let column = 0; column < FIELD_SIZE; column++) {\r\n      if (matrix[row][column] > maxHead) {\r\n        xHead = row;\r\n        yHead = column;\r\n        maxHead = matrix[row][column];\r\n      }\r\n    }\r\n  }\r\n  return { maxHead, xHead, yHead };\r\n}\r\n\r\n// Функция предоставляет случайные целые числа не менее min и менее max\r\nfunction getRandomInt(min: number, max: number): number {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\r\n}\r\n\r\n// Функция создаёт еду\r\nexport function createFood(matrix: Field): Field {\r\n  console.log('Количество жертв: ' + 1);\r\n  const newMatrix = copyArray(matrix);\r\n  const xFood = getRandomInt(0, FIELD_SIZE);\r\n  const yFood = getRandomInt(0, FIELD_SIZE);\r\n\r\n  for (let row = 0; row < FIELD_SIZE; row++) {\r\n    for (let column = 0; column < FIELD_SIZE; column++) {\r\n      if (row === xFood && column === yFood) {\r\n        newMatrix[row][column] = FOOD_FIELD;\r\n      }\r\n    }\r\n  }\r\n  return newMatrix;\r\n}\r\n\r\n// Функция-флаг наличия еды\r\nexport function searchFood(matrix: Field): boolean {\r\n  for (let row = 0; row < FIELD_SIZE; row++) {\r\n    for (let column = 0; column < FIELD_SIZE; column++) {\r\n      if (matrix[row][column] === FOOD_FIELD) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n// Функция обрабатывает стрелочки\r\nexport function switchDirection(xHead: number, yHead: number, direct: number): HeadCoordinates {\r\n  switch (direct) {\r\n    case UP:\r\n      xHead--;\r\n      if (xHead < 0) xHead = FIELD_SIZE - 1;\r\n      break;\r\n    case DOWN:\r\n      xHead++;\r\n      if (xHead > FIELD_SIZE - 1) xHead = 0;\r\n      break;\r\n    case LEFT:\r\n      yHead--;\r\n      if (yHead < 0) yHead = FIELD_SIZE - 1;\r\n      break;\r\n    case RIGHT:\r\n      yHead++;\r\n      if (yHead > FIELD_SIZE - 1) yHead = 0;\r\n      break;\r\n  }\r\n  const xNextHead = xHead;\r\n  const yNextHead = yHead;\r\n  return { xNextHead, yNextHead };\r\n}\r\n\r\n// Функция убавляет по единичке с каждого элемента Змейки\r\nexport function minusOne(matrix: Field) {\r\n  const newMatrix = copyArray(matrix);\r\n  for (let row = 0; row < FIELD_SIZE; row++) {\r\n    for (let column = 0; column < FIELD_SIZE; column++) {\r\n      if (newMatrix[row][column] > EMPTY_FIELD) {\r\n        newMatrix[row][column] = matrix[row][column] - 1;\r\n      }\r\n    }\r\n  }\r\n  return newMatrix;\r\n}\r\n\r\n// Функция находит длину Змейки *зачёркнуто* Червячка\r\nexport function getWormLength(matrix: Field): number {\r\n  let bodyCount = 0;\r\n  for (let i = 0; i < FIELD_SIZE; i++) {\r\n    for (let j = 0; j < FIELD_SIZE; j++) {\r\n      if (matrix[i][j] > 0) bodyCount++;\r\n    }\r\n  }\r\n  return bodyCount - 1;\r\n}\r\n\r\n// Функция копирует массив\r\nexport function copyArray(array: Field): Field {\r\n  let newArray = [...array];\r\n  for (let i = 0; i < newArray.length; i++) {\r\n    newArray[i] = [...newArray[i]];\r\n  }\r\n  return newArray;\r\n}\r\n\r\n// функция предоставляет следующее состояние матрицы\r\nexport function getNextMatrix(matrix: Field, direct: number): Field {\r\n  let newMatrix = copyArray(matrix);\r\n\r\n  if (!searchFood(newMatrix)) {\r\n    newMatrix = createFood(newMatrix);\r\n  }\r\n\r\n  const { xHead, yHead } = searchHead(newMatrix);\r\n\r\n  const { xNextHead, yNextHead } = switchDirection(xHead, yHead, direct);\r\n\r\n  if (newMatrix[xNextHead][yNextHead] === FOOD_FIELD) {\r\n    newMatrix[xNextHead][yNextHead] = newMatrix[xHead][yHead] + 1;\r\n    return newMatrix;\r\n  }\r\n\r\n  if (newMatrix[xNextHead][yNextHead] === EMPTY_FIELD) {\r\n    const head = newMatrix[xHead][yHead];\r\n    newMatrix = minusOne(newMatrix);\r\n    newMatrix[xNextHead][yNextHead] = head;\r\n    return newMatrix;\r\n  }\r\n\r\n  if (newMatrix[xNextHead][yNextHead] > 0) {\r\n    newMatrix = createMatrix();\r\n    return newMatrix;\r\n  }\r\n\r\n  return newMatrix;\r\n}\r\n","import React from 'react';\r\nimport './Header.css';\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"header1\">Змейка</h1>\r\n      <h2 className=\"header2\">И тебя тоже съест (:</h2>\r\n    </div>\r\n  );\r\n}\r\n","import './Box.css';\r\nimport { EMPTY_FIELD, FOOD_FIELD } from '../matrix';\r\n\r\nexport type ItemProps = {\r\n  status: number;\r\n  maxHead: number;\r\n};\r\n\r\n// компонент отрисовки возможных вариантов поля (еда, змейка etc)\r\nexport const Box = ({ status = EMPTY_FIELD, maxHead }: ItemProps) => {\r\n  function getClassName() {\r\n    if (status === FOOD_FIELD) {\r\n      return 'food';\r\n    }\r\n    if (status === EMPTY_FIELD) {\r\n      return 'empty';\r\n    }\r\n    if (status === maxHead) {\r\n      return 'head';\r\n    }\r\n    if (status > EMPTY_FIELD && status < maxHead) {\r\n      return 'body';\r\n    }\r\n  }\r\n  return <div className={'box ' + getClassName()}> </div>;\r\n};\r\n","import './Box.css';\r\nimport { searchHead } from '../matrix';\r\n// @ts-ignore\r\nimport { Box } from './Box.tsx';\r\nimport './Field.css';\r\n\r\nexport type MatrixProps = {\r\n  matrix: number[][];\r\n};\r\n\r\n// компонент отрисовки поля\r\nexport const Field = ({ matrix }: MatrixProps) => {\r\n  const { maxHead } = searchHead(matrix);\r\n  return (\r\n    <div className=\"matrix\">\r\n      {matrix.map((row, rowIndex) => (\r\n        <div className=\"row\" key={rowIndex}>\r\n          {row.map((item, itemIndex) => (\r\n            <Box status={item} maxHead={maxHead} key={itemIndex} />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import './Counter.css';\r\nexport type BodyProps = {\r\n  bodyCount: number;\r\n};\r\n\r\nexport const Counter = ({ bodyCount = 0 }: BodyProps) => {\r\n  return <div className=\"counter\"> Количество скушцанного: {bodyCount} </div>;\r\n};\r\n","import { useKey } from 'react-use';\nimport './matrix';\nimport './App.css';\nimport Header from './components/Header';\nimport { createMatrix, DOWN, getNextMatrix, getWormLength, LEFT, RIGHT, UP } from './matrix';\n// @ts-ignore\nimport { Field } from './stories/Field.tsx';\nimport { Counter } from './stories/Counter';\nimport { useEffect, useState, useRef } from 'react';\n\nfunction App() {\n  const [matrix, setMatrix] = useState(createMatrix());\n  const direct = useRef(UP);\n  const upArrow = ['w', 'W', 'ArrowUp'];\n  const downArrow = ['s', 'S', 'ArrowDown'];\n  const leftArrow = ['a', 'A', 'ArrowLeft'];\n  const rightArrow = ['d', 'D', 'ArrowRight'];\n\n  useKey(\n    event => upArrow.includes(event.key),\n    () => direct.current !== DOWN && (direct.current = UP)\n  );\n  useKey(\n    event => downArrow.includes(event.key),\n\n    () => direct.current !== UP && (direct.current = DOWN)\n  );\n  useKey(\n    event => leftArrow.includes(event.key),\n    () => direct.current !== RIGHT && (direct.current = LEFT)\n  );\n  useKey(\n    event => rightArrow.includes(event.key),\n    () => direct.current !== LEFT && (direct.current = RIGHT)\n  );\n\n  useEffect(() => {\n    let intervalId: any;\n    intervalId = setInterval(() => {\n      setMatrix(matrix => getNextMatrix(matrix, direct.current));\n    }, 100);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"workspace\">\n        <Header />\n        <button\n          className=\"exit\"\n          onClick={() => {\n            getNextMatrix(createMatrix(), UP);\n          }}\n        >\n          {' '}\n          Restart Page{' '}\n        </button>\n        <Counter bodyCount={getWormLength(matrix)} />\n        <Field matrix={matrix} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}